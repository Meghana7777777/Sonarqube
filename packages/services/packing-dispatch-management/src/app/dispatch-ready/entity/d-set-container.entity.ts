import { Column, Entity } from "typeorm";
import { AbstractEntity } from "../../../database/common-entities";
import { PkContainerReadinessEnum, PkContainerTypeEnum } from "@xpparel/shared-models";


@Entity('d_set_container')
export class DSetContainerEntity extends AbstractEntity {

    @Column("bigint", {  name: "d_set_id", nullable: false, comment: 'pk of the d_set table ' })
    dSetId: number;

    // Contianers can be defined at set / set item level. So this can be nukk
    @Column("bigint", {  name: "d_set_item_id", nullable: true, comment: 'pk of the d_set_item table ' })
    dSetItemId: number;

    @Column("varchar", { length: "15", name: "container_number", nullable: false, comment: 'The container number given by user' })
    containerNumber: string;

    @Column("varchar", { length: "5", name: "container_type", nullable: false, comment: 'The container type i.e the box/polybag/etc' })
    containerType: PkContainerTypeEnum;

    @Column("text", { name: "container_remarks", nullable: false, comment: 'The container remarks' })
    containerRemarks: string;

    @Column("varchar", { length: "20", name: "barcode", nullable: false, comment: 'generated by system/existing barcode' })
    barcode: string;

    @Column("tinyint", { name: "print_status", nullable: false, comment: 'The print status for  dispatch', default:0 })
    printStatus: number;

    @Column("varchar", { name: "item_readiness", length: 5, nullable: false, comment: 'The item readiness number for  dispatch' })
    itemReadiness: PkContainerReadinessEnum;

}