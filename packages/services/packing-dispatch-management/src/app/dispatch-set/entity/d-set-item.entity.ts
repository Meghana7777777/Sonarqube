import { Column, Entity } from "typeorm";
import { AbstractEntity } from "../../../database/common-entities";
import { PkDSetItemStageEnum, DispatchEntityEnum, PackingMethodsEnum } from "@xpparel/shared-models";



@Entity('d_set_item')
export class DSetItemEntity extends AbstractEntity {

    @Column("bigint", { name: "d_set_id", nullable: false, comment: 'pk of the d_set table  ' })
    dSetId: number;
    
    @Column("varchar", { length: "5", name: "dispatch_entity", nullable: false, comment: 'The entity type being dispatched (electronics/garment/etc)' })
    dispatchEntity: DispatchEntityEnum;

    // usually the pakcing list entity name
    @Column("varchar", { length: "30", name: "de_ref_table", nullable: false, comment: 'Ref table name where this item actually exist  ' })
    deRefTable: string;

    // usually the pack list related PK
    @Column("varchar", { length: "10", name: "de_ref_id", nullable: false, comment: 'The pk of the  de ref table' })
    deRefId: string;

    // currently NL follows 
    // ref1 = packing list no
    // ref2 =  NA
    // ref3 =  NA

    // packing list number if exists
    @Column("varchar", { length: "20", name: "de_ref_no1", nullable: false, comment: 'item related ref number , could be cut/docuket/style/schedule/some other no' })
    deRefNo1: string;

    // pack list type
    @Column("varchar", { length: "20", name: "de_ref_no2", nullable: false, comment: 'type of packlist SCSZ, SCMZ ..' })
    deRefNo2: PackingMethodsEnum;

    // null ATM
    @Column("varchar", { length: "30", name: "de_ref_no3", nullable: true, comment: 'item related ref number , could be cut/docuket/style/schedule/some other no ' })
    deRefNo3: string;

    // The pack list descrioption
    @Column("varchar", { length: "50", name: "de_ref_desc1", nullable: true, comment: 'Pack list description' })
    deRefDesc1: string;

    // null ATM
    @Column("varchar", { length: "50", name: "de_ref_desc2", nullable: true, comment: 'null' })
    deRefDesc2: string;

    @Column("decimal", { scale: 2, precision: 7, name: "item_quantity", nullable: false, comment: 'The total qty of this specific item. SUM(total items in each sub item) .i.e total panels' })
    itemQuantity: number;

    @Column("int", { name: "sub_item_count", nullable: false, comment: 'The total sub items in the item' })
    subItemsCount: number;

    @Column("tinyint", { name: "print_status", nullable: false, comment: 'The print status for  dispatch', default: 0 })
    printStatus: number;

    @Column("tinyint", { name: "si_print_status", nullable: false, comment: 'The print status of the bundles', default: 0 })
    subItemPrintStatus: number;

    @Column("tinyint", { name: "con_print_status", nullable: false, comment: 'The print status of the containers', default: 0 })
    conPrintStatus: number;

    @Column("varchar", { length: "30", name: "item_no", nullable: true, comment: 'ref item number coming from the host table ' })
    itemNo: string;

    @Column("varchar", { length: "20", name: "barcode", nullable: true, comment: 'generated by system/existing barcode' })
    barcode: string;
    
    @Column("varchar", { length: "5", name: "current_stage", nullable: false, comment: 'The current stage for  dispatch' })
    currentStage: PkDSetItemStageEnum;
}
