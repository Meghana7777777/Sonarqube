pipeline {
    agent any
    environment {
        CI_PROJECT_DIR = "${WORKSPACE}"
        PATH = "${WORKSPACE}/node_modules/.bin:$PATH"
    }
    stages {  
        stage('Install Dependencies') {
            steps {
                sh 'npm install'
            }
        }

        stage('SonarQube Analysis') {
            steps {
                withSonarQubeEnv('Sonarqube') { // Replace with your actual SonarQube server name
                    sh '''
                        sonar-scanner \
                        -Dsonar.projectKey=nodejs-project \
                        -Dsonar.sources=packages \
                        -Dsonar.exclusions=**/node_modules/**,**/*.spec.ts,**/*.test.ts \
                        -Dsonar.javascript.lcov.reportPaths=coverage/lcov.info
                    '''
                }
            }
        }

        stage('Build Backend') {
            steps {
                sh '''
                    export PATH="$CI_PROJECT_DIR/node_modules/.bin:$PATH"
                    nx run services-order-management:build --skip-nx-cache
                    nx run services-unit-management:build --skip-nx-cache
                    nx run services-warehouse-management:build --skip-nx-cache
                    nx run services-packing-dispatch-management:build --skip-nx-cache
                    nx run services-packing-management:build --skip-nx-cache
                    nx run services-quality-management:build --skip-nx-cache
                    nx run services-inspection:build --skip-nx-cache
                    nx run services-knitting-management:build
                    nx run services-inventory-management:build --skip-nx-cache
                    nx run services-sewing-planning:build
                    nx run services-production-tracking:build
                    nx run services-cut-planning:build --skip-nx-cache
                    nx run services-order-execution:build
                '''
            }
        }
        stage('Build Frontend') {
            steps {
                sh '''
                    export PATH="$CI_PROJECT_DIR/node_modules/.bin:$PATH"
                    nx run ui:build --skip-nx-cache
                '''
            }
        }
    }
}
